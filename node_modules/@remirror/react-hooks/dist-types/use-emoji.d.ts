import { EmojiSuggestHandlerCommand, EmojiSuggestHandlerProps, FlatEmoji } from '@remirror/extension-emoji';
import { MenuNavigationOptions, UseMenuNavigationReturn } from './use-menu-navigation';
export interface FlatEmojiWithUrl extends FlatEmoji {
    /**
     * The svg url for CDN access.
     */
    url: string;
}
export interface EmojiState extends Pick<EmojiSuggestHandlerProps, 'range' | 'query' | 'exit'> {
    /**
     * The list of emoji generated by the query.
     *
     * @defaultValue []
     */
    list: FlatEmojiWithUrl[];
    /**
     * The command to run to replace the query with the request emoji.
     *
     * @defaultValue undefined
     */
    apply: EmojiSuggestHandlerCommand;
}
export interface UseEmojiProps extends MenuNavigationOptions {
}
export interface UseEmojiReturn extends UseMenuNavigationReturn<FlatEmojiWithUrl> {
    /**
     * The state of the current query, only available when active.
     */
    state: EmojiState | null;
}
/**
 * This hook provides the state for setting up an emoji state change handler. It
 * applies the keybindings and the required change handlers.
 */
export declare function useEmoji(props?: UseEmojiProps): UseEmojiReturn;
